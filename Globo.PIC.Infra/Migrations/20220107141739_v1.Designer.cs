// <auto-generated />
using System;
using Globo.PIC.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Globo.PIC.Infra.Migrations
{
    [DbContext(typeof(PicDbContext))]
    [Migration("20220107141739_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Acionamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DataCancelamento")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_cancelamento");

                    b.Property<DateTime?>("DataInicioGravacao")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_data_inicio_gravacao");

                    b.Property<DateTime?>("DataSaida")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_data_saida");

                    b.Property<DateTime?>("DataTerminoGravacao")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_data_termino_gravacao");

                    b.Property<string>("HoraHigienizacaoSet")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("nm_hora_higienizacao_set");

                    b.Property<long>("IdPedido")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_pedido_veiculos");

                    b.Property<string>("JustificativaCancelamento")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_justificativa_cancelamento");

                    b.Property<string>("LocalEntrega")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_local_entrega");

                    b.Property<string>("Observacao")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_observacao");

                    b.Property<string>("OutraJustificativa")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_outra_justificativa");

                    b.Property<string>("Roteiro")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_roteiro");

                    b.HasKey("Id");

                    b.HasIndex("IdPedido");

                    b.ToTable("TB_ACIONAMENTO");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.AcionamentoItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<sbyte>("Adesivagem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT(4)")
                        .HasDefaultValue((sbyte)0)
                        .HasColumnName("st_adesivagem");

                    b.Property<sbyte>("CenaAcao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT(4)")
                        .HasDefaultValue((sbyte)0)
                        .HasColumnName("st_cena_acao");

                    b.Property<DateTime?>("DataAprovacao")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_data_aprovacao");

                    b.Property<DateTime?>("DataCancelamento")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_cancelamento");

                    b.Property<DateTime?>("DataConfirmacaoAdesivagem")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_data_confirmacao_adesivagem");

                    b.Property<DateTime?>("DataConfirmacaoCenaAcao")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_data_confirmacao_cena_acao");

                    b.Property<DateTime?>("DataConfirmacaoInsulfilm")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_data_confirmacao_insulfilm");

                    b.Property<DateTime?>("DataConfirmacaoMecanica")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_data_confirmacao_mecanica");

                    b.Property<DateTime?>("DataConfirmacaoMotoristaCena")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_data_confirmacao_motorista_cena");

                    b.Property<DateTime?>("DataConfirmacaoReboque")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_data_confirmacao_reboque");

                    b.Property<DateTime?>("DataReprovacao")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_data_reprovacao");

                    b.Property<string>("HorasParado")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_horas_parado");

                    b.Property<string>("HorasVoo")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_horas_voo");

                    b.Property<long>("IdAcionamento")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_acionamento");

                    b.Property<long>("IdPedidoItem")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_pedido_item");

                    b.Property<sbyte>("Insulfilm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT(4)")
                        .HasDefaultValue((sbyte)0)
                        .HasColumnName("st_insulfilm");

                    b.Property<string>("JustificativaCancelamento")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_justificativa_cancelamento");

                    b.Property<string>("JustificativaReprovacao")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_justificativa_reprovacao");

                    b.Property<string>("LocalEmbarque")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_local_embarque");

                    b.Property<string>("LocalGravacao")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_local_gravacao");

                    b.Property<string>("LoginAprovacao")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_login_aprovacao");

                    b.Property<string>("LoginReprovacao")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_login_reprovacao");

                    b.Property<sbyte>("Mecanica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT(4)")
                        .HasDefaultValue((sbyte)0)
                        .HasColumnName("st_mecanica");

                    b.Property<sbyte>("MotoristaCena")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT(4)")
                        .HasDefaultValue((sbyte)0)
                        .HasColumnName("st_motorista_cena");

                    b.Property<string>("OutraJustificativa")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_outra_justificativa");

                    b.Property<int>("Passageiros")
                        .HasColumnType("INT")
                        .HasColumnName("nr_passageiros");

                    b.Property<string>("PeriodoUtilizacaoCena")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_periodo_utilizacao");

                    b.Property<sbyte>("Reboque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT(4)")
                        .HasDefaultValue((sbyte)0)
                        .HasColumnName("st_reboque");

                    b.Property<string>("SobreAdesivagem")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_sobre_adesivagem");

                    b.Property<string>("SobreCenaAcao")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_sobre_cena_acao");

                    b.Property<string>("SobreInsulfilm")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_sobre_insulfilm");

                    b.Property<string>("SobreMecanica")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_sobre_mecanica");

                    b.Property<string>("SobreMotoristaCena")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_sobre_motorista_cena");

                    b.Property<string>("SobreReboque")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_sobre_reboque");

                    b.Property<sbyte>("Taxar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT(4)")
                        .HasDefaultValue((sbyte)0)
                        .HasColumnName("st_taxat");

                    b.HasKey("Id");

                    b.HasIndex("IdAcionamento");

                    b.HasIndex("IdPedidoItem");

                    b.HasIndex("LoginAprovacao");

                    b.HasIndex("LoginReprovacao");

                    b.ToTable("TB_ACIONAMENTO_ITEM");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.AcionamentoItemAnexo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DataAcionamentoItemAnexo")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_arquivo");

                    b.Property<long>("IdAcionamentoItem")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_acionamento_item");

                    b.Property<string>("NomeArquivo")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_arquivo");

                    b.Property<string>("NomeOriginal")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_original");

                    b.Property<string>("Tipo")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("ds_tipo");

                    b.HasKey("Id");

                    b.HasIndex("IdAcionamentoItem");

                    b.ToTable("TB_ACIONAMENTO_ITEM_ANEXO");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Assign", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<string>("Login")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("ds_login");

                    b.Property<long?>("NotificationId")
                        .IsRequired()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_notificacao");

                    b.Property<string>("Role")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("ds_role");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId");

                    b.ToTable("TB_NOTIFICACAO_ASSOCIADOS");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Categoria", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<long?>("IdCategoria")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_categoria");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_categoria");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.ToTable("TB_CATEGORIA");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Conteudo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_codigo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_nome");

                    b.Property<sbyte>("Sigiloso")
                        .HasColumnType("TINYINT(4)")
                        .HasColumnName("st_sigiloso");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("VARCHAR(1)")
                        .HasColumnName("nm_status");

                    b.HasKey("Id");

                    b.ToTable("TB_CONTEUDO");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Departamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_departamento");

                    b.HasKey("Id");

                    b.ToTable("TB_DEPARTAMENTO");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Equipe", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<long>("IdPedido")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_pedido");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_login");

                    b.HasKey("Id");

                    b.HasIndex("IdPedido");

                    b.HasIndex("Login");

                    b.ToTable("TB_PEDIDO_EQUIPE");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Item", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<string>("AcordoJuridico")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_acordo_juridico");

                    b.Property<string>("CodItem")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_cod_item");

                    b.Property<string>("CodigoFornecedor")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("VARCHAR(14)")
                        .HasColumnName("cd_fornecedor");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_descricao");

                    b.Property<string>("Fornecedor")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_fornecedor");

                    b.Property<long>("IdSubCategoria")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_subcategoria");

                    b.Property<long>("IdTipo")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_tipo");

                    b.Property<long>("IdTipoNegociacao")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_tipo_negociacao");

                    b.Property<long?>("LinhaAcordo")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("nr_linha_acordo");

                    b.Property<string>("NomeItem")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_nome");

                    b.Property<string>("NroAcordo")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_nro_acordo");

                    b.Property<string>("Observacao")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_observacao");

                    b.Property<string>("UnidadeMedida")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("nm_unidade_medida");

                    b.Property<decimal>("Valor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DECIMAL(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vl_valor");

                    b.HasKey("Id");

                    b.HasIndex("IdSubCategoria");

                    b.HasIndex("IdTipo");

                    b.ToTable("TB_ITEM");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.ItemAnexo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DataItemAnexo")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_arquivo");

                    b.Property<long>("IdItem")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_item");

                    b.Property<string>("NomeArquivo")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_arquivo");

                    b.Property<string>("NomeOriginal")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_original");

                    b.Property<string>("Tipo")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("ds_tipo");

                    b.HasKey("Id");

                    b.HasIndex("IdItem");

                    b.ToTable("TB_ITEM_ANEXO");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.ItemCatalogo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<sbyte>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT(4)")
                        .HasDefaultValue((sbyte)0)
                        .HasColumnName("st_ativo");

                    b.Property<DateTime?>("AtivoAte")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_ativo_ate");

                    b.Property<sbyte>("BloqueadoOutrosConteudos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT(4)")
                        .HasDefaultValue((sbyte)0)
                        .HasColumnName("st_bloqueado");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_data_fim");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_data_inicio");

                    b.Property<long>("IdConteudo")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_conteudo");

                    b.Property<long>("IdItem")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_item");

                    b.Property<string>("JustificativaBloqueio")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_justificativa_bloqueio");

                    b.HasKey("Id");

                    b.HasIndex("IdItem");

                    b.ToTable("TB_ITEM_CATALOGO");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.ItemVeiculo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<long>("Ano")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("nr_ano");

                    b.Property<sbyte>("BloqueioEmprestimos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT(4)")
                        .HasDefaultValue((sbyte)0)
                        .HasColumnName("st_bloqueio_emprestimos");

                    b.Property<string>("Cidade")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_cidade");

                    b.Property<string>("Cor")
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)")
                        .HasColumnName("nm_cor");

                    b.Property<DateTime?>("DataAprovacao")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_data_aprovacao");

                    b.Property<DateTime?>("DataAtivoAte")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_data_ativo_ate");

                    b.Property<DateTime?>("DataChegada")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_data_chegada");

                    b.Property<DateTime?>("DataConfirmacaoEnvioAprovacao")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_data_confirmacao_envio_aprovacao");

                    b.Property<DateTime?>("DataDevolucao")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_data_devolucao");

                    b.Property<DateTime?>("DataReprovacao")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_data_reprovacao");

                    b.Property<string>("HoraFechamento")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("nm_hora_fechamento");

                    b.Property<long>("IdItem")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_item");

                    b.Property<long>("IdPedidoItemVeiculo")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_pedido_veiculos_item");

                    b.Property<long>("IdTipoPagamento")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_tipo_pagamento");

                    b.Property<string>("JustificativaBloqueio")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_justificativa_bloqueio");

                    b.Property<string>("JustificativaReprovacao")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_justificativa_reprovacao");

                    b.Property<string>("Modelo")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_modelo");

                    b.Property<string>("ObservacaoComprador")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_observacao_comprador");

                    b.Property<string>("ObservacaoEP")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_observacao_ep");

                    b.Property<string>("Periodo")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_periodo");

                    b.Property<string>("Placa")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("nm_placa");

                    b.HasKey("Id");

                    b.HasIndex("IdItem")
                        .IsUnique();

                    b.HasIndex("IdPedidoItemVeiculo");

                    b.ToTable("TB_ITEM_VEICULO");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Notificacao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_criacao");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("ds_link");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("ds_titulo");

                    b.HasKey("Id");

                    b.ToTable("TB_NOTIFICACAO");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Pedido", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<sbyte>("Ativo")
                        .HasColumnType("TINYINT(4)")
                        .HasColumnName("st_ativo");

                    b.Property<string>("AtualizadoPorLogin")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_atualizado_por");

                    b.Property<string>("CanceladoPorLogin")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_login_cancelamento");

                    b.Property<string>("CentroCusto")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_centro_custo");

                    b.Property<string>("Conta")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_conta");

                    b.Property<string>("CriadoPorLogin")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_criado_por");

                    b.Property<DateTime?>("DataCancelamento")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_cancelamento");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_criacao");

                    b.Property<DateTime?>("DataDevolucao")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_devolucao");

                    b.Property<DateTime?>("DataPedido")
                        .IsRequired()
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_pedido");

                    b.Property<string>("DeliverToLocationCode")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_codigo_localizacao");

                    b.Property<long>("DeliverToLocationId")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_localizacao");

                    b.Property<string>("DescricaoTarefa")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_tarefa_descricao");

                    b.Property<string>("DestinationOrganizationCode")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_codigo_organizacao");

                    b.Property<long>("DestinationOrganizationId")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_organizacao");

                    b.Property<string>("DevolvidoPorLogin")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_login_devolucao");

                    b.Property<string>("Finalidade")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_finalidade");

                    b.Property<long>("IdConteudo")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_conteudo");

                    b.Property<long>("IdProjeto")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_projeto");

                    b.Property<long>("IdTag")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_tag");

                    b.Property<long>("IdTarefa")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_tarefa");

                    b.Property<long>("IdTipo")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_tipo");

                    b.Property<string>("JustificativaCancelamento")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_justificativa_cancelamento");

                    b.Property<string>("JustificativaDevolucao")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_justificativa_devolucao");

                    b.Property<string>("LocalEntrega")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_local_entrega");

                    b.Property<long>("NroItens")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasDefaultValue(0L)
                        .HasColumnName("nr_itens");

                    b.Property<string>("Observacao")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_observacao");

                    b.Property<string>("Titulo")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_titulo");

                    b.Property<decimal>("ValorItens")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DECIMAL(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vl_total");

                    b.HasKey("Id");

                    b.HasIndex("AtualizadoPorLogin");

                    b.HasIndex("CanceladoPorLogin");

                    b.HasIndex("CriadoPorLogin");

                    b.HasIndex("DevolvidoPorLogin");

                    b.HasIndex("IdConteudo");

                    b.ToTable("TB_PEDIDO");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoAnexo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DataPedidoAnexo")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_arquivo");

                    b.Property<long>("IdPedido")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_pedido");

                    b.Property<string>("NomeArquivo")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_arquivo");

                    b.Property<string>("NomeOriginal")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_original");

                    b.Property<string>("Tipo")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("ds_tipo");

                    b.HasKey("Id");

                    b.HasIndex("IdPedido");

                    b.ToTable("TB_PEDIDO_ANEXO");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoArte", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<string>("BaseLogin")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_login_base");

                    b.Property<DateTime?>("DataConfirmacaoCompra")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_confirmacao_compra");

                    b.Property<DateTime?>("DataEdicaoReenvio")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_edicao_reenvio");

                    b.Property<DateTime?>("DataNecessidade")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_necessario");

                    b.Property<DateTime?>("DataReenvio")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_reenvio");

                    b.Property<DateTime?>("DataSolicitacaoCancelamento")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_solicitacao_cancelamento");

                    b.Property<DateTime?>("DataVinculoBase")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_vinculo_base");

                    b.Property<string>("DescricaoCena")
                        .HasColumnType("TEXT")
                        .HasColumnName("ds_cena");

                    b.Property<sbyte>("FlagFastPass")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT(4)")
                        .HasDefaultValue((sbyte)0)
                        .HasColumnName("st_fastpass");

                    b.Property<sbyte>("FlagPedidoAlimentos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT(4)")
                        .HasDefaultValue((sbyte)0)
                        .HasColumnName("st_pedido_alimentos");

                    b.Property<long>("IdPedido")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_pedido");

                    b.Property<long>("IdStatus")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_status");

                    b.Property<string>("LocalUtilizacao")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_local_utilizacao");

                    b.HasKey("Id");

                    b.HasIndex("BaseLogin");

                    b.HasIndex("IdPedido")
                        .IsUnique();

                    b.HasIndex("IdStatus");

                    b.ToTable("TB_PEDIDO_ARTE");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<string>("AprovadoPorLogin")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_login_aprovacao");

                    b.Property<string>("CanceladoPorLogin")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_login_cancelamento");

                    b.Property<DateTime?>("DataAprovacao")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_aprovacao");

                    b.Property<DateTime?>("DataCancelamento")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_cancelamento");

                    b.Property<DateTime?>("DataDevolucao")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_devolucao");

                    b.Property<DateTime?>("DataEntrega")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_entrega");

                    b.Property<DateTime?>("DataNecessidade")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_necessario");

                    b.Property<DateTime?>("DataReprovacao")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_reprovacao");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_descricao");

                    b.Property<string>("DevolvidoPorLogin")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_login_devolucao");

                    b.Property<long?>("IdItem")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_item");

                    b.Property<long>("IdPedido")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_pedido");

                    b.Property<long?>("IdPedidoItemPai")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_pedido_item");

                    b.Property<string>("Justificativa")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_justificativa");

                    b.Property<string>("JustificativaCancelamento")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_justificativa_cancelamento");

                    b.Property<string>("JustificativaDevolucao")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_justificativa_devolucao");

                    b.Property<string>("LocalEntrega")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_local_entrega");

                    b.Property<string>("NomeItem")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_item");

                    b.Property<string>("Numero")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasDefaultValue("0")
                        .HasColumnName("cd_numero");

                    b.Property<string>("Observacao")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_observacao");

                    b.Property<long>("Quantidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasDefaultValue(0L)
                        .HasColumnName("nr_qtd");

                    b.Property<string>("ReprovadoPorLogin")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_login_reprovacao");

                    b.Property<string>("UnidadeMedida")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("nm_unidade_medida");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("DECIMAL(18,2)")
                        .HasColumnName("vl_valor");

                    b.Property<decimal>("ValorItens")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DECIMAL(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vl_valor_itens");

                    b.Property<decimal>("ValorUnitario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DECIMAL(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vl_valor_unitario");

                    b.HasKey("Id");

                    b.HasIndex("AprovadoPorLogin");

                    b.HasIndex("CanceladoPorLogin");

                    b.HasIndex("DevolvidoPorLogin");

                    b.HasIndex("IdItem");

                    b.HasIndex("IdPedido");

                    b.HasIndex("IdPedidoItemPai");

                    b.HasIndex("ReprovadoPorLogin");

                    b.ToTable("TB_PEDIDO_ITEM");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemAnexo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DataPedidoItemAnexo")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_arquivo");

                    b.Property<long>("IdPedidoItem")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_pedido_item");

                    b.Property<string>("NomeArquivo")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_arquivo");

                    b.Property<string>("NomeOriginal")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_original");

                    b.Property<string>("Tipo")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("ds_tipo");

                    b.HasKey("Id");

                    b.HasIndex("IdPedidoItem");

                    b.ToTable("TB_PEDIDO_ITEM_ANEXO");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemArte", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<string>("CompradoPorLogin")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_login_comprador");

                    b.Property<DateTime?>("DataEdicaoReenvio")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_edicao_reenvio");

                    b.Property<DateTime?>("DataEntregaPrevista")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_entrega_prevista");

                    b.Property<DateTime?>("DataReenvio")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_reenvio");

                    b.Property<DateTime?>("DataVinculoComprador")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_vinculo_comprador");

                    b.Property<DateTime?>("DataVisualizacaoComprador")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_visualizacao_comprador");

                    b.Property<sbyte>("FlagDevolvidoBase")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT(4)")
                        .HasDefaultValue((sbyte)0)
                        .HasColumnName("st_devolvido_base");

                    b.Property<sbyte>("FlagDevolvidoComprador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT(4)")
                        .HasDefaultValue((sbyte)0)
                        .HasColumnName("st_devolvido_comprador");

                    b.Property<sbyte>("FlagItemNaoEncontrado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT(4)")
                        .HasDefaultValue((sbyte)0)
                        .HasColumnName("st_item_nao_encontrado");

                    b.Property<long>("IdPedidoItem")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_pedido_item");

                    b.Property<long>("IdStatus")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_status");

                    b.Property<long>("IdTipo")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_tipo");

                    b.Property<sbyte>("MarcacaoCena")
                        .HasColumnType("TINYINT(4)")
                        .HasColumnName("st_marcacao_cena");

                    b.Property<string>("ObservacaoAprovacaoCompra")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_observacao_aprovacao");

                    b.Property<long>("QuantidadeAprovacaoCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasDefaultValue(0L)
                        .HasColumnName("nr_qtd_aprovacao_compra");

                    b.Property<long>("QuantidadeComprada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasDefaultValue(0L)
                        .HasColumnName("nr_qtd_comprada");

                    b.Property<long>("QuantidadeDevolvida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasDefaultValue(0L)
                        .HasColumnName("nr_qtd_devolvida");

                    b.Property<long>("QuantidadeEntregue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasDefaultValue(0L)
                        .HasColumnName("nr_qtd_entregue");

                    b.Property<long>("QuantidadePendenteCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasDefaultValue(0L)
                        .HasColumnName("nr_qtd_pendente_compra");

                    b.Property<long>("QuantidadePendenteEntrega")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasDefaultValue(0L)
                        .HasColumnName("nr_qtd_pendente_entrega");

                    b.Property<string>("Referencias")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_referencias");

                    b.Property<sbyte>("SolicitacaoDirigida")
                        .HasColumnType("TINYINT(4)")
                        .HasColumnName("st_solicitacao_dirigida");

                    b.Property<string>("SugestaoFornecedor")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_sugestao_fornecedor");

                    b.HasKey("Id");

                    b.HasIndex("CompradoPorLogin");

                    b.HasIndex("IdPedidoItem")
                        .IsUnique();

                    b.HasIndex("IdStatus");

                    b.ToTable("TB_PEDIDO_ITEM_ARTE");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemArteAtribuicao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<string>("Comprador")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_comprador");

                    b.Property<string>("CompradorAnterior")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_comprador_anterior");

                    b.Property<DateTime?>("DataAtribuicao")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_atribuicao");

                    b.Property<long>("IdPedidoItemArte")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_pedidoarteitem");

                    b.Property<long>("IdTipo")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_tipo");

                    b.Property<string>("Justificativa")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_justificativa");

                    b.HasKey("Id");

                    b.HasIndex("Comprador");

                    b.HasIndex("CompradorAnterior");

                    b.HasIndex("IdPedidoItemArte");

                    b.ToTable("TB_PEDIDO_ITEM_ARTE_ATRIBUICAO");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemArteCompra", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DataCompra")
                        .IsRequired()
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_compra");

                    b.Property<long>("IdPedidoItemArte")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_pedidoarteitem");

                    b.Property<string>("Login")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_login");

                    b.Property<string>("NumeroDocumento")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("cd_nro_documento");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_observacoes");

                    b.Property<long>("Quantidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasDefaultValue(0L)
                        .HasColumnName("nr_qtd");

                    b.Property<decimal>("ValorCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DECIMAL(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vl_valor_compra");

                    b.HasKey("Id");

                    b.HasIndex("IdPedidoItemArte");

                    b.HasIndex("Login");

                    b.ToTable("TB_PEDIDO_ITEM_ARTE_COMPRA");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemArteCompraDocumento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DataDocumento")
                        .IsRequired()
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_documento");

                    b.Property<string>("Fornecedor")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_fornecedor");

                    b.Property<long>("IdCompra")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_compra");

                    b.Property<string>("Login")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_login");

                    b.Property<string>("Observacao")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_observacao");

                    b.Property<long>("Quantidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasDefaultValue(0L)
                        .HasColumnName("nr_qtd");

                    b.Property<decimal>("ValorCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DECIMAL(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vl_valor_compra");

                    b.HasKey("Id");

                    b.HasIndex("IdCompra");

                    b.HasIndex("Login");

                    b.ToTable("TB_PEDIDO_ITEM_ARTE_COMPRA_DOCUMENTO");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemArteCompraDocumentoAnexo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DataCompraAnexo")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_arquivo");

                    b.Property<long>("IdDocumento")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_documentos");

                    b.Property<string>("NomeArquivo")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_arquivo");

                    b.Property<string>("NomeOriginal")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_original");

                    b.Property<string>("Tipo")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("ds_tipo");

                    b.HasKey("Id");

                    b.HasIndex("IdDocumento");

                    b.ToTable("TB_PEDIDO_ITEM_ARTE_COMPRA_DOCUMENTO_ANEXO");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemArteDevolucao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<string>("Comprador")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_comprador");

                    b.Property<DateTime?>("DataDevolucao")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_devolucao");

                    b.Property<long>("IdPedidoItemArte")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_pedidoarteitem");

                    b.Property<long>("IdPedidoItemArteOriginal")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_pedidoarteitemOriginal");

                    b.Property<string>("Justificativa")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_justificativa");

                    b.Property<long>("Quantidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasDefaultValue(0L)
                        .HasColumnName("nr_qtd");

                    b.Property<long>("idTipo")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_tipo");

                    b.HasKey("Id");

                    b.HasIndex("Comprador");

                    b.HasIndex("IdPedidoItemArte");

                    b.ToTable("TB_PEDIDO_ITEM_ARTE_DEVOLUCAO");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemArteEntrega", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DataEntrega")
                        .IsRequired()
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_entrega");

                    b.Property<long>("IdPedidoItemArte")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_pedidoarteitem");

                    b.Property<string>("LocalEntrega")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_local_entrega");

                    b.Property<string>("Login")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_login");

                    b.Property<string>("Observacao")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_observacao");

                    b.Property<long>("Quantidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasDefaultValue(0L)
                        .HasColumnName("nr_qtd");

                    b.Property<string>("Recebedor")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_recebedor");

                    b.HasKey("Id");

                    b.HasIndex("IdPedidoItemArte");

                    b.HasIndex("Login");

                    b.ToTable("TB_PEDIDO_ITEM_ARTE_ENTREGA");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemArteTracking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<sbyte>("Ativo")
                        .HasColumnType("TINYINT(4)")
                        .HasColumnName("st_ativo");

                    b.Property<string>("ChangeById")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("ds_alterado_por");

                    b.Property<long>("IdPedidoItemArte")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_pedido_item");

                    b.Property<long>("StatusId")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_status");

                    b.Property<long>("StatusPosition")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("nr_ordem");

                    b.Property<DateTime?>("TrackingDate")
                        .IsRequired()
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_tracking");

                    b.HasKey("Id");

                    b.HasIndex("ChangeById");

                    b.HasIndex("IdPedidoItemArte");

                    b.HasIndex("StatusId");

                    b.ToTable("TB_PEDIDO_ITEM_ARTE_TRACKING");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemConversa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DataConversa")
                        .IsRequired()
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_conversa");

                    b.Property<string>("DescricaoConversa")
                        .HasColumnType("TEXT")
                        .HasColumnName("ds_conversa");

                    b.Property<long?>("IdPICPai")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_pedidoitem_conversa_pai");

                    b.Property<long>("IdPedidoItem")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_pedidoitem");

                    b.Property<string>("Login")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_login");

                    b.HasKey("Id");

                    b.HasIndex("IdPedidoItem");

                    b.HasIndex("Login");

                    b.ToTable("TB_PEDIDO_ITEM_CONVERSA");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemConversaAnexo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DataPedidoItemConversa")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_arquivo");

                    b.Property<long>("IdPedidoItem")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_pedidoitem_conversa");

                    b.Property<string>("NomeArquivo")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_arquivo");

                    b.Property<string>("NomeOriginal")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_original");

                    b.Property<string>("Tipo")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("ds_tipo");

                    b.HasKey("Id");

                    b.HasIndex("IdPedidoItem");

                    b.ToTable("TB_PEDIDO_ITEM_CONVERSA_ANEXO");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemVeiculo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<long>("Ano")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("nr_ano");

                    b.Property<sbyte>("CenaAcao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT(4)")
                        .HasDefaultValue((sbyte)0)
                        .HasColumnName("st_cena_acao");

                    b.Property<sbyte>("Continuidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT(4)")
                        .HasDefaultValue((sbyte)0)
                        .HasColumnName("st_continuidade");

                    b.Property<string>("Cor")
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)")
                        .HasColumnName("nm_cor");

                    b.Property<DateTime?>("DataChegadaVeiculo")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_chegada");

                    b.Property<DateTime?>("DataDevolucaoVeiculo")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_devolucao");

                    b.Property<DateTime?>("DataDevolver")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_devolver");

                    b.Property<string>("HorasParado")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("nm_horasparado");

                    b.Property<string>("HorasVoo")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("nm_horasvoo");

                    b.Property<long>("IdOrigem")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_origem");

                    b.Property<long>("IdPedidoItem")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_pedido_item");

                    b.Property<long>("IdStatus")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_status");

                    b.Property<long>("IdSubCategoria")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_subcategoria_veiculos");

                    b.Property<long>("IdTipo")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_tipo_veiculos");

                    b.Property<string>("JustificativaDevolver")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_justificativa_devolver");

                    b.Property<string>("LocalFaturamento")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_local_faturamento");

                    b.Property<string>("LocalGravacao")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_localgravacao");

                    b.Property<string>("Modelo")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_modelo");

                    b.Property<string>("Necessidades")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_necessidades");

                    b.Property<long>("NroOpcoes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasDefaultValue(0L)
                        .HasColumnName("nr_opcoes");

                    b.Property<string>("Observacao")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_observacao");

                    b.Property<long>("Passageiros")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("nr_passageiros");

                    b.Property<string>("PersonagemUtilizacao")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_personagem_utilizacao");

                    b.Property<string>("SobreCenaAcao")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_sobrecenaacao");

                    b.Property<long>("Tag")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_tag");

                    b.Property<decimal>("ValorMaximo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DECIMAL(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vl_valor_maximo");

                    b.HasKey("Id");

                    b.HasIndex("IdPedidoItem")
                        .IsUnique();

                    b.HasIndex("IdStatus");

                    b.HasIndex("IdSubCategoria");

                    b.HasIndex("IdTipo");

                    b.ToTable("TB_PEDIDO_ITEM_VEICULO");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemVeiculoTracking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<sbyte>("Ativo")
                        .HasColumnType("TINYINT(4)")
                        .HasColumnName("st_ativo");

                    b.Property<string>("ChangeById")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("ds_alterado_por");

                    b.Property<long>("IdPedidoItem")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_pedido_item");

                    b.Property<long>("StatusId")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_status");

                    b.Property<long>("StatusPosition")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("nr_ordem");

                    b.Property<DateTime?>("TrackingDate")
                        .IsRequired()
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_tracking");

                    b.HasKey("Id");

                    b.HasIndex("ChangeById");

                    b.HasIndex("IdPedidoItem");

                    b.HasIndex("StatusId");

                    b.ToTable("TB_PEDIDO_ITEM_VEICULO_TRACKING");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoVeiculo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<string>("AcionadoPorLogin")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_login_acionamento");

                    b.Property<string>("CompradoPorLogin")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_login_comprador");

                    b.Property<DateTime?>("DataAcionamento")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_acionamento");

                    b.Property<DateTime?>("DataChegada")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_chegada");

                    b.Property<DateTime?>("DataDevolucao")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_devolucao");

                    b.Property<DateTime?>("DataEnvio")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("dt_envio");

                    b.Property<long>("IdPedido")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_pedido");

                    b.Property<long>("IdStatus")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_status");

                    b.Property<string>("LocalFaturamento")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_local_faturamento");

                    b.Property<sbyte>("PreProducao")
                        .HasColumnType("TINYINT(4)")
                        .HasColumnName("st_pre_producao");

                    b.HasKey("Id");

                    b.HasIndex("AcionadoPorLogin");

                    b.HasIndex("CompradoPorLogin");

                    b.HasIndex("IdPedido")
                        .IsUnique();

                    b.HasIndex("IdStatus");

                    b.ToTable("TB_PEDIDO_VEICULO");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.RC", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<string>("Acordo")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("cd_acordo");

                    b.Property<long?>("AcordoId")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_acordo");

                    b.Property<long?>("AcordoLinhaId")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_linha_acordo");

                    b.Property<string>("AcordoLinhaStatus")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("st_linha_acordo");

                    b.Property<string>("AcordoStatus")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("st_acordo");

                    b.Property<string>("BUId")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("cd_oracle_bu");

                    b.Property<long>("CatalogItemKey")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("cd_catalog_item_key");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_categoria");

                    b.Property<long>("CategoriaId")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_categoria");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT")
                        .HasColumnName("ds_titulo");

                    b.Property<string>("DescricaoCompleta")
                        .HasColumnType("TEXT")
                        .HasColumnName("ds_completa");

                    b.Property<string>("Fornecedor")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_fornecedor");

                    b.Property<long?>("FornecedorId")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_fornecedor");

                    b.Property<string>("HeadId")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("cd_oracle_head_id");

                    b.Property<long>("IdPedidoItem")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_pedido_item");

                    b.Property<string>("ImagemUrl")
                        .HasMaxLength(5000)
                        .HasColumnType("VARCHAR(5000)")
                        .HasColumnName("nm_imagem_url");

                    b.Property<string>("ItemCodigo")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("cd_item");

                    b.Property<long?>("ItemId")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_item");

                    b.Property<string>("LineId")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("cd_oracle_lineid");

                    b.Property<string>("LinhaStatus")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("st_line_requisition");

                    b.Property<string>("Moeda")
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(10)")
                        .HasColumnName("ds_moeda");

                    b.Property<string>("OrdemCompra")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("cd_ordem_compra");

                    b.Property<string>("Requisition")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("cd_oracle_requisition");

                    b.Property<string>("Status")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("st_requisition");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("ds_tipo_documento");

                    b.Property<string>("UOM")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_uom");

                    b.Property<string>("UOMCode")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("sg_uom");

                    b.Property<decimal>("Valor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DECIMAL(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("vl_valor");

                    b.HasKey("Id");

                    b.HasIndex("IdPedidoItem");

                    b.ToTable("TB_RC");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Reader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("ds_login");

                    b.Property<long?>("NotificationId")
                        .IsRequired()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_notificacao");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId");

                    b.ToTable("TB_NOTIFICACAO_LIDAS");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.StatusPedidoArte", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_status");

                    b.HasKey("Id");

                    b.ToTable("TB_STATUS_PEDIDO_ARTE");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.StatusPedidoItemArte", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_status");

                    b.HasKey("Id");

                    b.ToTable("TB_STATUS_PEDIDO_ITEM_ARTE");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.StatusPedidoItemVeiculo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_status");

                    b.HasKey("Id");

                    b.ToTable("TB_STATUS_PEDIDO_ITEM_VEICULO");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.StatusPedidoVeiculo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_status");

                    b.HasKey("Id");

                    b.ToTable("TB_STATUS_PEDIDO_VEICULO");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.UnidadeNegocio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<string>("Codigo")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("nm_codigo");

                    b.Property<string>("CodigoOrganizacaoInventario")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("nm_codigo_oi");

                    b.Property<string>("Nome")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nm_nome");

                    b.Property<string>("Uf")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_uf");

                    b.HasKey("Id");

                    b.ToTable("TB_UNIDADE_NEGOCIO");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.UserRole", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_role");

                    b.Property<string>("Login")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_login");

                    b.HasKey("Name", "Login");

                    b.HasIndex("Login");

                    b.ToTable("TB_ROLES_USUARIO");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Usuario", b =>
                {
                    b.Property<string>("Login")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_login");

                    b.Property<string>("Apelido")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_apelido");

                    b.Property<string>("Email")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_email");

                    b.Property<long?>("IdDepartamento")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_departamento");

                    b.Property<long?>("IdUnidadeNegocio")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_unidade_negocio");

                    b.Property<sbyte>("IsActive")
                        .HasColumnType("TINYINT")
                        .HasColumnName("st_ativo");

                    b.Property<string>("LastName")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(500)")
                        .HasColumnName("nm_sobrenome");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR(250)")
                        .HasColumnName("nm_nome");

                    b.HasKey("Login");

                    b.HasIndex("IdDepartamento");

                    b.HasIndex("IdUnidadeNegocio");

                    b.ToTable("TB_USUARIO");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.UsuarioConteudo", b =>
                {
                    b.Property<long>("IdConteudo")
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_conteudo");

                    b.Property<string>("Login")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("nm_login");

                    b.HasKey("IdConteudo", "Login");

                    b.HasIndex("Login");

                    b.ToTable("TB_USUARIO_CONTEUDOS");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Viewer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("ds_login");

                    b.Property<long?>("NotificationId")
                        .IsRequired()
                        .HasColumnType("BIGINT(20)")
                        .HasColumnName("id_notificacao");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId");

                    b.ToTable("TB_NOTIFICACAO_VIZUALIZADAS");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Acionamento", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.PedidoVeiculo", "PedidoVeiculo")
                        .WithMany("Acionamento")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PedidoVeiculo");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.AcionamentoItem", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.Acionamento", "Acionamento")
                        .WithMany("AcionamentoPedidoItens")
                        .HasForeignKey("IdAcionamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Globo.PIC.Domain.Entities.PedidoItem", "PedidoItem")
                        .WithMany("AcionamentoItens")
                        .HasForeignKey("IdPedidoItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Globo.PIC.Domain.Entities.Usuario", "AcionamentoItemLoginAprovacao")
                        .WithMany("AcionamentoItemAprovacao")
                        .HasForeignKey("LoginAprovacao");

                    b.HasOne("Globo.PIC.Domain.Entities.Usuario", "AcionamentoItemLoginReprovacao")
                        .WithMany("AcionamentoItemReprovacao")
                        .HasForeignKey("LoginReprovacao");

                    b.Navigation("Acionamento");

                    b.Navigation("AcionamentoItemLoginAprovacao");

                    b.Navigation("AcionamentoItemLoginReprovacao");

                    b.Navigation("PedidoItem");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.AcionamentoItemAnexo", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.AcionamentoItem", "AcionamentoPedidoItem")
                        .WithMany("Arquivos")
                        .HasForeignKey("IdAcionamentoItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcionamentoPedidoItem");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Assign", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.Notificacao", "Notification")
                        .WithMany("Assigns")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Notification");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Categoria", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.Categoria", "CategoriaPai")
                        .WithMany("Categorias")
                        .HasForeignKey("IdCategoria");

                    b.Navigation("CategoriaPai");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Equipe", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.Pedido", "Pedido")
                        .WithMany("Equipe")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Globo.PIC.Domain.Entities.Usuario", "Usuario")
                        .WithMany("PedidoEquipe")
                        .HasForeignKey("Login")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Item", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.Categoria", "SubCategoria")
                        .WithMany("ItemSubCategorias")
                        .HasForeignKey("IdSubCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Globo.PIC.Domain.Entities.Categoria", "Tipo")
                        .WithMany("ItemTipos")
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubCategoria");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.ItemAnexo", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.Item", "Item")
                        .WithMany("Arquivos")
                        .HasForeignKey("IdItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.ItemCatalogo", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.Item", "Item")
                        .WithMany("ItemCatalogos")
                        .HasForeignKey("IdItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.ItemVeiculo", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.Item", "Item")
                        .WithOne("ItemVeiculo")
                        .HasForeignKey("Globo.PIC.Domain.Entities.ItemVeiculo", "IdItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Globo.PIC.Domain.Entities.PedidoItemVeiculo", "PedidoItemVeiculo")
                        .WithMany("ItensVeiculo")
                        .HasForeignKey("IdPedidoItemVeiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("PedidoItemVeiculo");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Pedido", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.Usuario", "AtualizadoPor")
                        .WithMany("PedidosLoginAtualizadoPor")
                        .HasForeignKey("AtualizadoPorLogin");

                    b.HasOne("Globo.PIC.Domain.Entities.Usuario", "CanceladoPor")
                        .WithMany("PedidosLoginCancelamento")
                        .HasForeignKey("CanceladoPorLogin");

                    b.HasOne("Globo.PIC.Domain.Entities.Usuario", "CriadoPor")
                        .WithMany("PedidosLoginCriadoPor")
                        .HasForeignKey("CriadoPorLogin");

                    b.HasOne("Globo.PIC.Domain.Entities.Usuario", "DevolvidoPor")
                        .WithMany("PedidosLoginDevolucao")
                        .HasForeignKey("DevolvidoPorLogin");

                    b.HasOne("Globo.PIC.Domain.Entities.Conteudo", "Conteudo")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdConteudo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AtualizadoPor");

                    b.Navigation("CanceladoPor");

                    b.Navigation("Conteudo");

                    b.Navigation("CriadoPor");

                    b.Navigation("DevolvidoPor");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoAnexo", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.Pedido", "Pedido")
                        .WithMany("Arquivos")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoArte", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.Usuario", "Base")
                        .WithMany("PedidosLoginArteBase")
                        .HasForeignKey("BaseLogin");

                    b.HasOne("Globo.PIC.Domain.Entities.Pedido", "Pedido")
                        .WithOne("PedidoArte")
                        .HasForeignKey("Globo.PIC.Domain.Entities.PedidoArte", "IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Globo.PIC.Domain.Entities.StatusPedidoArte", "Status")
                        .WithMany("PedidosArte")
                        .HasForeignKey("IdStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Base");

                    b.Navigation("Pedido");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItem", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.Usuario", "AprovadoPor")
                        .WithMany("PedidosItemLoginAprovacao")
                        .HasForeignKey("AprovadoPorLogin");

                    b.HasOne("Globo.PIC.Domain.Entities.Usuario", "CanceladoPor")
                        .WithMany("PedidosItemLoginCancelamento")
                        .HasForeignKey("CanceladoPorLogin");

                    b.HasOne("Globo.PIC.Domain.Entities.Usuario", "DevolvidoPor")
                        .WithMany("PedidosItemLoginDevolucao")
                        .HasForeignKey("DevolvidoPorLogin");

                    b.HasOne("Globo.PIC.Domain.Entities.Item", "Item")
                        .WithMany("PedidoItens")
                        .HasForeignKey("IdItem");

                    b.HasOne("Globo.PIC.Domain.Entities.Pedido", "Pedido")
                        .WithMany("Itens")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Globo.PIC.Domain.Entities.PedidoItem", "PedidoItemPai")
                        .WithMany("PedidoItensFilhos")
                        .HasForeignKey("IdPedidoItemPai");

                    b.HasOne("Globo.PIC.Domain.Entities.Usuario", "ReprovadoPor")
                        .WithMany("PedidosItemLoginReprovacao")
                        .HasForeignKey("ReprovadoPorLogin");

                    b.Navigation("AprovadoPor");

                    b.Navigation("CanceladoPor");

                    b.Navigation("DevolvidoPor");

                    b.Navigation("Item");

                    b.Navigation("Pedido");

                    b.Navigation("PedidoItemPai");

                    b.Navigation("ReprovadoPor");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemAnexo", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.PedidoItem", "PedidoItem")
                        .WithMany("Arquivos")
                        .HasForeignKey("IdPedidoItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PedidoItem");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemArte", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.Usuario", "Comprador")
                        .WithMany("PedidosItemArteLoginComprador")
                        .HasForeignKey("CompradoPorLogin");

                    b.HasOne("Globo.PIC.Domain.Entities.PedidoItem", "PedidoItem")
                        .WithOne("PedidoItemArte")
                        .HasForeignKey("Globo.PIC.Domain.Entities.PedidoItemArte", "IdPedidoItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Globo.PIC.Domain.Entities.StatusPedidoItemArte", "Status")
                        .WithMany("PedidoItensArte")
                        .HasForeignKey("IdStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comprador");

                    b.Navigation("PedidoItem");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemArteAtribuicao", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.Usuario", "UsuarioComprador")
                        .WithMany("CompradorAtribuicao")
                        .HasForeignKey("Comprador");

                    b.HasOne("Globo.PIC.Domain.Entities.Usuario", "UsuarioCompradorAnterior")
                        .WithMany("CompradorAnteriorAtribuicao")
                        .HasForeignKey("CompradorAnterior");

                    b.HasOne("Globo.PIC.Domain.Entities.PedidoItemArte", "PedidoItemArte")
                        .WithMany("Atribuicoes")
                        .HasForeignKey("IdPedidoItemArte")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PedidoItemArte");

                    b.Navigation("UsuarioComprador");

                    b.Navigation("UsuarioCompradorAnterior");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemArteCompra", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.PedidoItemArte", "PedidoItemArte")
                        .WithMany("Compras")
                        .HasForeignKey("IdPedidoItemArte")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Globo.PIC.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Compras")
                        .HasForeignKey("Login");

                    b.Navigation("PedidoItemArte");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemArteCompraDocumento", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.PedidoItemArteCompra", "Compra")
                        .WithMany("Documentos")
                        .HasForeignKey("IdCompra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Globo.PIC.Domain.Entities.Usuario", "User")
                        .WithMany("Documentos")
                        .HasForeignKey("Login");

                    b.Navigation("Compra");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemArteCompraDocumentoAnexo", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.PedidoItemArteCompraDocumento", "Documentos")
                        .WithMany("Arquivos")
                        .HasForeignKey("IdDocumento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Documentos");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemArteDevolucao", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.Usuario", "UserComprador")
                        .WithMany("Devolucao")
                        .HasForeignKey("Comprador");

                    b.HasOne("Globo.PIC.Domain.Entities.PedidoItemArte", "PedidoItemArte")
                        .WithMany("Devolucoes")
                        .HasForeignKey("IdPedidoItemArte")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PedidoItemArte");

                    b.Navigation("UserComprador");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemArteEntrega", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.PedidoItemArte", "PedidoItemArte")
                        .WithMany("Entregas")
                        .HasForeignKey("IdPedidoItemArte")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Globo.PIC.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Entregas")
                        .HasForeignKey("Login");

                    b.Navigation("PedidoItemArte");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemArteTracking", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.Usuario", "ChangedBy")
                        .WithMany("TrackingArte")
                        .HasForeignKey("ChangeById");

                    b.HasOne("Globo.PIC.Domain.Entities.PedidoItemArte", "PedidoItemArte")
                        .WithMany("TrackingArte")
                        .HasForeignKey("IdPedidoItemArte")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Globo.PIC.Domain.Entities.StatusPedidoItemArte", "Status")
                        .WithMany("Tracking")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChangedBy");

                    b.Navigation("PedidoItemArte");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemConversa", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.PedidoItem", "PedidoItem")
                        .WithMany("PedidoItemConversas")
                        .HasForeignKey("IdPedidoItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Globo.PIC.Domain.Entities.Usuario", "Usuario")
                        .WithMany("PedidoItemConversa")
                        .HasForeignKey("Login");

                    b.Navigation("PedidoItem");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemConversaAnexo", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.PedidoItemConversa", "PedidoItemConversa")
                        .WithMany("Arquivos")
                        .HasForeignKey("IdPedidoItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PedidoItemConversa");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemVeiculo", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.PedidoItem", "PedidoItem")
                        .WithOne("PedidoItemVeiculo")
                        .HasForeignKey("Globo.PIC.Domain.Entities.PedidoItemVeiculo", "IdPedidoItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Globo.PIC.Domain.Entities.StatusPedidoItemVeiculo", "Status")
                        .WithMany("Status")
                        .HasForeignKey("IdStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Globo.PIC.Domain.Entities.Categoria", "SubCategoria")
                        .WithMany("PedidosVeiculosSubCategorias")
                        .HasForeignKey("IdSubCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Globo.PIC.Domain.Entities.Categoria", "Tipo")
                        .WithMany("PedidosVeiculosTipos")
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PedidoItem");

                    b.Navigation("Status");

                    b.Navigation("SubCategoria");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemVeiculoTracking", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.Usuario", "ChangedBy")
                        .WithMany("TrackingVeiculo")
                        .HasForeignKey("ChangeById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Globo.PIC.Domain.Entities.PedidoItemVeiculo", "PedidoItemVeiculo")
                        .WithMany("Trackings")
                        .HasForeignKey("IdPedidoItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Globo.PIC.Domain.Entities.StatusPedidoItemVeiculo", "Status")
                        .WithMany("Tracking")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChangedBy");

                    b.Navigation("PedidoItemVeiculo");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoVeiculo", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.Usuario", "Acionador")
                        .WithMany("PedidosLoginVeiculoAcionamento")
                        .HasForeignKey("AcionadoPorLogin");

                    b.HasOne("Globo.PIC.Domain.Entities.Usuario", "Comprador")
                        .WithMany("PedidosLoginVeiculoComprador")
                        .HasForeignKey("CompradoPorLogin");

                    b.HasOne("Globo.PIC.Domain.Entities.Pedido", "Pedido")
                        .WithOne("PedidoVeiculo")
                        .HasForeignKey("Globo.PIC.Domain.Entities.PedidoVeiculo", "IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Globo.PIC.Domain.Entities.StatusPedidoVeiculo", "Status")
                        .WithMany("PedidosVeiculo")
                        .HasForeignKey("IdStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acionador");

                    b.Navigation("Comprador");

                    b.Navigation("Pedido");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.RC", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.PedidoItem", "PedidoItem")
                        .WithMany("RCs")
                        .HasForeignKey("IdPedidoItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PedidoItem");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Reader", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.Notificacao", "Notification")
                        .WithMany("Readers")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Notification");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.UserRole", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.Usuario", "User")
                        .WithMany("Roles")
                        .HasForeignKey("Login")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.Departamento", "Departamento")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdDepartamento");

                    b.HasOne("Globo.PIC.Domain.Entities.UnidadeNegocio", "UnidadeNegocio")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdUnidadeNegocio");

                    b.Navigation("Departamento");

                    b.Navigation("UnidadeNegocio");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.UsuarioConteudo", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.Conteudo", "Conteudo")
                        .WithMany("UsuariosConteudos")
                        .HasForeignKey("IdConteudo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Globo.PIC.Domain.Entities.Usuario", "Usuario")
                        .WithMany("UsuariosConteudos")
                        .HasForeignKey("Login")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conteudo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Viewer", b =>
                {
                    b.HasOne("Globo.PIC.Domain.Entities.Notificacao", "Notification")
                        .WithMany("Viewers")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Notification");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Acionamento", b =>
                {
                    b.Navigation("AcionamentoPedidoItens");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.AcionamentoItem", b =>
                {
                    b.Navigation("Arquivos");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Categoria", b =>
                {
                    b.Navigation("Categorias");

                    b.Navigation("ItemSubCategorias");

                    b.Navigation("ItemTipos");

                    b.Navigation("PedidosVeiculosSubCategorias");

                    b.Navigation("PedidosVeiculosTipos");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Conteudo", b =>
                {
                    b.Navigation("Pedidos");

                    b.Navigation("UsuariosConteudos");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Departamento", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Item", b =>
                {
                    b.Navigation("Arquivos");

                    b.Navigation("ItemCatalogos");

                    b.Navigation("ItemVeiculo");

                    b.Navigation("PedidoItens");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Notificacao", b =>
                {
                    b.Navigation("Assigns");

                    b.Navigation("Readers");

                    b.Navigation("Viewers");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Pedido", b =>
                {
                    b.Navigation("Arquivos");

                    b.Navigation("Equipe");

                    b.Navigation("Itens");

                    b.Navigation("PedidoArte");

                    b.Navigation("PedidoVeiculo");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItem", b =>
                {
                    b.Navigation("AcionamentoItens");

                    b.Navigation("Arquivos");

                    b.Navigation("PedidoItemArte");

                    b.Navigation("PedidoItemConversas");

                    b.Navigation("PedidoItemVeiculo");

                    b.Navigation("PedidoItensFilhos");

                    b.Navigation("RCs");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemArte", b =>
                {
                    b.Navigation("Atribuicoes");

                    b.Navigation("Compras");

                    b.Navigation("Devolucoes");

                    b.Navigation("Entregas");

                    b.Navigation("TrackingArte");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemArteCompra", b =>
                {
                    b.Navigation("Documentos");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemArteCompraDocumento", b =>
                {
                    b.Navigation("Arquivos");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemConversa", b =>
                {
                    b.Navigation("Arquivos");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoItemVeiculo", b =>
                {
                    b.Navigation("ItensVeiculo");

                    b.Navigation("Trackings");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.PedidoVeiculo", b =>
                {
                    b.Navigation("Acionamento");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.StatusPedidoArte", b =>
                {
                    b.Navigation("PedidosArte");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.StatusPedidoItemArte", b =>
                {
                    b.Navigation("PedidoItensArte");

                    b.Navigation("Tracking");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.StatusPedidoItemVeiculo", b =>
                {
                    b.Navigation("Status");

                    b.Navigation("Tracking");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.StatusPedidoVeiculo", b =>
                {
                    b.Navigation("PedidosVeiculo");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.UnidadeNegocio", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Globo.PIC.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("AcionamentoItemAprovacao");

                    b.Navigation("AcionamentoItemReprovacao");

                    b.Navigation("CompradorAnteriorAtribuicao");

                    b.Navigation("CompradorAtribuicao");

                    b.Navigation("Compras");

                    b.Navigation("Devolucao");

                    b.Navigation("Documentos");

                    b.Navigation("Entregas");

                    b.Navigation("PedidoEquipe");

                    b.Navigation("PedidoItemConversa");

                    b.Navigation("PedidosItemArteLoginComprador");

                    b.Navigation("PedidosItemLoginAprovacao");

                    b.Navigation("PedidosItemLoginCancelamento");

                    b.Navigation("PedidosItemLoginDevolucao");

                    b.Navigation("PedidosItemLoginReprovacao");

                    b.Navigation("PedidosLoginArteBase");

                    b.Navigation("PedidosLoginAtualizadoPor");

                    b.Navigation("PedidosLoginCancelamento");

                    b.Navigation("PedidosLoginCriadoPor");

                    b.Navigation("PedidosLoginDevolucao");

                    b.Navigation("PedidosLoginVeiculoAcionamento");

                    b.Navigation("PedidosLoginVeiculoComprador");

                    b.Navigation("Roles");

                    b.Navigation("TrackingArte");

                    b.Navigation("TrackingVeiculo");

                    b.Navigation("UsuariosConteudos");
                });
#pragma warning restore 612, 618
        }
    }
}
